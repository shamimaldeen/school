<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Leave extends CI_Controller{    function __construct()    {        parent::__construct();        $this->load->database();        $this->load->library('session');        $this->load->model(array('Ajaxdataload_model' => 'ajaxload'));        $this->load->model('Leave_model');        /*cache control*/        $this->output->set_header('Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0');        $this->output->set_header('Pragma: no-cache');    }    /***default function, redirects to login page if no accountant logged in yet***/    public function index()    {        if ($this->session->userdata('admin_login') != 1)            redirect(site_url('login'), 'refresh');        $page_data['leaves']      = $this->db->get('leaves')->result();        $page_data['page_name']  = 'leave/leave_index';        $page_data['page_title'] = get_phrase('employee_leave');        $this->load->view('backend/index', $page_data);    }    public function create_leave()    {        if ($this->session->userdata('admin_login') != 1)            redirect(site_url('login'), 'refresh');        $data['leave_name']    = $this->input->post('leave_name');        $data['short_name']    = $this->input->post('short_name');        $data['leave_days']    = $this->input->post('days');        $this->db->insert('leaves', $data);        $this->session->set_flashdata('flash_message' , get_phrase('data_added_successfully'));        redirect(site_url('leave'), 'refresh');    }    public function leave_action($param1='', $param2='', $param3='')    {        if ($this->session->userdata('admin_login') != 1)            redirect(site_url('login'), 'refresh');        if ($param1=="do_update")        {            $data['leave_name']    = $this->input->post('leave_name');            $data['short_name']    = $this->input->post('short_name');            $data['leave_days']    = $this->input->post('leave_days');            $this->db->where('id', $param2);            $this->db->update('leaves', $data);            $this->session->set_flashdata('flash_message' , get_phrase('data_added_successfully'));        }        if ($param1 == 'delete_row')        {            $this->db->where('id', $param2);            $this->db->delete('leaves');            $this->session->set_flashdata('flash_message' , get_phrase('data_deleted_successfully'));        }        redirect(site_url('leave'), 'refresh');    }    public function working_days()    {        if ($this->session->userdata('admin_login') != 1)            redirect(site_url('login'), 'refresh');        $page_data['days']      = $this->db->get('working_days')->result();        $page_data['page_name']  = 'leave/working_day_index';        $page_data['page_title'] = get_phrase('working_days');        $this->load->view('backend/index', $page_data);    }    public function working_action($param1='', $param2='', $param3='')    {        if ($this->session->userdata('admin_login') != 1)            redirect(site_url('login'), 'refresh');        if ($param1=="create") {            $data['month']    = $this->input->post('month');            $data['year']    = $this->input->post('year');            $data['working_day']    = $this->input->post('working_day');            $this->db->insert('working_days', $data);            $this->session->set_flashdata('flash_message' , get_phrase('data_added_successfully'));        }elseif ($param1=="do_update")        {            $data['month']          = $this->input->post('month');            $data['year']           = $this->input->post('year');            $data['working_day']    = $this->input->post('working_day');            $this->db->where('id', $param2);            $this->db->update('working_days', $data);            $this->session->set_flashdata('flash_message' , get_phrase('data_added_successfully'));        }        else if ($param1 == 'delete_row')        {            $this->db->where('id', $param2);            $this->db->delete('working_days');            $this->session->set_flashdata('flash_message' , get_phrase('data_deleted_successfully'));        }        redirect(site_url('leave/working_days'), 'refresh');    }    /************************************** LEAVE APPLICATION ALLOCATION **********************************/    public function leave_application()    {        if ($this->session->userdata('admin_login') != 1)            redirect(site_url('login'), 'refresh');        $year = get_settings('running_year');        $page_data['leave_list'] = $this->db->select('la.*, te.name emp_name')->join('teacher te', 'te.teacher_id=la.employee_id')->where('la.year', $year)->get('leave_apply_form la')->result();        $page_data['teachers']   = $this->db->select('teacher_id, name')->get('teacher')->result();        $page_data['leaves']      = $this->db->get('leaves')->result();        $page_data['page_name']  = 'leave/leave_allocation_index';        $page_data['page_title'] = get_phrase('employee_leave_application');        $this->load->view('backend/index', $page_data);    }    public function get_employee_info($code)       //Ajax Method()..    {        $year = get_settings('running_year');        $status = $this->Leave_model->get_single_leave_status($code, $year);//        print_r($status); exit();        $all_leave = $this->db->get('leaves')->result();        //pr($all_leave); exit();        $tbl = '';        foreach ($all_leave as $al):            $slug = 0;            $index = 0;            if (!empty($status)) {                foreach ($status as $sta):                    $index++;                    if ($al->id == $sta->leave_id) {                        $available = $sta->leave_days - $sta->enjoy_leave;                        $tbl .= "<tr><td>" . $sta->short_name . "</td><td>" . $sta->leave_days . "</td><td>" . str_pad($sta->enjoy_leave, 2, '0', STR_PAD_LEFT) . "</td><td>" . $available . "</td></tr>";                        $slug = 1;                        $index--;                    }                    if ($slug == 0 && count($status) == $index) {                        $tbl .= "<tr><td>" . $al->short_name . "</td><td>" . $al->leave_days . "</td><td>00</td><td>" . $al->leave_days . "</td></tr>";                    }                endforeach;            }else{                $tbl .= "<tr><td>" . $al->short_name . "</td><td>" . $al->leave_days . "</td><td>00</td><td>" . $al->leave_days . "</td></tr>";            }        endforeach;        //echo $tbl; exit();        echo json_encode(array(            'found_table'=>$tbl        ));        exit();    }    public function store_leave_application()    {        $this->load->library('form_validation');        $this->form_validation->set_rules('leave_id', 'Leave Type', 'trim|required|trim');        $this->form_validation->set_rules('employee_id', 'Employee Name', 'trim|required');        $this->form_validation->set_rules('leavecount', 'Total Leave', 'trim|required');        $this->form_validation->set_rules('from_date', 'From Date', 'trim|required');        $this->form_validation->set_rules('to_date', 'To Date', 'trim|required');        if ($this->form_validation->run() === FALSE) {            //exit('no_validate');            $this->session->set_flashdata('error_message' , get_phrase('pur_current_information'));            $this->leave_application();        }        else {            $year = get_settings('running_year');            $from_date = $this->input->post('from_date');            $month_id = date("m",strtotime($from_date));            $year_id = date("Y",strtotime($from_date));            $data = array(                'leave_id'      => trim($this->input->post('leave_id')),                'employee_id'   => trim($this->input->post('employee_id')),                'reason_type'   => trim($this->input->post('reason_type')),                'from_date'     => date('Y-m-d', strtotime($from_date)),                'to_date'       => date('Y-m-d', strtotime($this->input->post('to_date'))),                'leavecount'    => $this->input->post('leavecount'),                'month_id'      => $month_id,                'year_id'       => $year_id,                'year'          => $year            );            $this->db->trans_start();            $this->Leave_model->store_leave_application($data);            $this->db->trans_complete();            if ($this->db->trans_status() === FALSE) {                $this->session->set_flashdata('flash_message' , get_phrase('data_added_successfully'));            }            else            {                $this->session->set_flashdata('error_message' , get_phrase('data_insertion_failed!'));            }            redirect(site_url('leave/leave_application'), 'refresh');        }    }//End of store_leave_application()    public function update_leave_application($id)    {        $this->load->library('form_validation');        $this->form_validation->set_rules('leave_id', 'Leave Type', 'trim|required|trim');        $this->form_validation->set_rules('employee_id', 'Employee Name', 'trim|required');        $this->form_validation->set_rules('leavecount', 'Total Leave', 'trim|required');        $this->form_validation->set_rules('from_date', 'From Date', 'trim|required');        $this->form_validation->set_rules('to_date', 'To Date', 'trim|required');        if ($this->form_validation->run() === FALSE) {            //exit('no_validate');            $this->session->set_flashdata('error_message' , get_phrase('pur_current_information'));            $this->leave_application();        }        else {            $year = get_settings('running_year');            $from_date = $this->input->post('from_date');            $month_id = date("m",strtotime($from_date));            $year_id = date("Y",strtotime($from_date));            $data = array(                'leave_id'      => trim($this->input->post('leave_id')),                'employee_id'   => trim($this->input->post('employee_id')),                'reason_type'   => trim($this->input->post('reason_type')),                'from_date'     => date('Y-m-d', strtotime($from_date)),                'to_date'       => date('Y-m-d', strtotime($this->input->post('to_date'))),                'leavecount'    => $this->input->post('leavecount'),                'month_id'      => $month_id,                'year_id'       => $year_id,                'year'          => $year            );            $this->db->trans_start();            $this->db->where('id',$id )->update('leave_apply_form', $data);            $this->db->trans_complete();            if ($this->db->trans_status() === FALSE) {                $this->session->set_flashdata('flash_message' , get_phrase('data_updated_successfully'));            }            else            {                $this->session->set_flashdata('error_message' , get_phrase('update_failed!'));            }            redirect(site_url('leave/leave_application'), 'refresh');        }    }//End of store_leave_application()    public function delete_application($param1='')    {        $this->db->where('id', $param1);        $this->db->delete('leave_application_form');        $this->session->set_flashdata('flash_message' , get_phrase('data_deleted_successfully'));        redirect(site_url('leave/leave_application'), 'refresh');    }    /********************************LEAVE APPLICATION REPORT **********************************/    public function leave_report(){        $page_data['page_name']  = 'leave/leave_report_by_date';        $page_data['page_title'] = get_phrase('employee_leave_report');        $this->load->view('backend/index', $page_data);    }    public function leave_report_print(){        if (!empty($_POST)) {            $year = get_settings('running_year');            $this->form_validation->set_rules('from_date', 'From Date', 'required');            $this->form_validation->set_rules('to_date','To Date','required');            if ($this->form_validation->run()) {                $page_data = [                    'from_date' => date('Y-m-d', strtotime($this->input->post('from_date', true))),                    'to_date' => date('Y-m-d', strtotime($this->input->post('to_date', true))),                ];                $page_data['leave_list'] = $this->db->select('la.*, te.name emp_name, te.designation')->join('teacher te', 'te.teacher_id=la.employee_id')->where('la.year', $year)                    ->where('la.from_date>=', $page_data['from_date'])                    ->where('la.to_date<=', $page_data['to_date'])                    ->get('leave_apply_form la')->result();                $html = $this->load->view('backend/admin/leave/leave_report_by_date_print', $page_data, true);                $pdfFilePath = "expense_report.pdf";                $mpdf = new \Mpdf\Mpdf();                $mpdf->WriteHTML($html);                $mpdf->Output($pdfFilePath, "I");            }        } else{            $this->session->set_flashdata('error_message' , get_phrase('something_wrong!_try_again'));            redirect(site_url('report/expense_report'), 'refresh');        }    }}